# Workflow to test automatic uploading to Sciebo

name: Upload Testfile 

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Description to be shown in the UI 
        description: 'Filename'
        # Default value if no value is explicitly provided
        default: 'data-YYYY-MM-DD'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "upload"
  upload:
    # The type of runner that the job will run on
    # ubuntu latest should be 22
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Create and Upload a file containing the current date to SCIEBO
    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
        # Required, if the artifact is from a different repo
        # Required, if the repo is private a Personal Access Token with `repo` scope is needed
        #github_token: ${{secrets.GITHUB_TOKEN}}
        # Optional, workflow file name or ID
        # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
        workflow: createTarBall.yml
        # Optional, the status or conclusion of a completed workflow to search for
        # Can be one of a workflow conclusion:
        #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
        # Or a workflow status:
        #   "completed", "in_progress", "queued"
        # Use the empty string ("") to ignore status or conclusion in the search
        workflow_conclusion: success
        # Optional, will get head commit SHA
        #pr: ${{github.event.pull_request.number}}
        # Optional, no need to specify if PR is
        #commit: ${{github.event.pull_request.head.sha}}
        # Optional, will use the specified branch. Defaults to all branches
        #branch: master
        # Optional, defaults to all types
        #event: push
        # Optional, will use specified workflow run
        #run_id: 1122334455
        # Optional, run number from the workflow
        #run_number: 34
        # Optional, uploaded artifact name,
        # will download all artifacts if not specified
        # and extract them into respective subdirectories
        # https://github.com/actions/download-artifact#download-all-artifacts
        name: crpropa-data
        # Optional, a directory where to extract artifact(s), defaults to the current directory
        #path:
        # Optional, defaults to current repo
        #repo: ${{ github.repository }}
        # Optional, check the workflow run to whether it has an artifact
        # then will get the last available artifact from the previous workflow
        # default false, just try to download from the last one
        check_artifacts:  false
        # Optional, search for the last workflow run whose stored an artifact named as in `name` input
        # default false
        search_artifacts: false
        # Optional, choose to skip unpacking the downloaded artifact(s)
        # default false
        skip_unpack: false
        # Optional, choose how to exit the action if no artifact is found
        # can be one of:
        #  "fail", "warn", "ignore"
        # default fail
        if_no_artifact_found: fail
    - name: Display structure of downloaded files
      run: ls -R
    #- name: Compress into tar ball
    #  run: | 
    #    tar -czf "${{ github.event.inputs.name }}.tar.gz" "./data"
    #    ls -R
    - name: Upload to sciebo
      shell: bash
      run: |
        curl -u "$SCIEBO_USR:$SCIEBO_PWD" -T  "$data-{{ github.event.inputs.name }}.tar.gz" "https://ruhr-uni-bochum.sciebo.de/public.php/webdav/data-2023-1-20.tar.gz"
        curl -u "$SCIEBO_USR:$SCIEBO_PWD" -T  "$data-{{ github.event.inputs.name }}.tar.gz-CHECKSUM" "https://ruhr-uni-bochum.sciebo.de/public.php/webdav/data-2023-1-20.tar.gz-CHECKSUM"
      env:
          # Login credentials are stored as encrypted secrets in the repository settings on github.
          SCIEBO_USR: ${{ secrets.SCIEBO_CRPDATA_USR }}
          SCIEBO_PWD: ${{ secrets.SCIEBO_CRPDATA_PWD}}
          
